/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var M=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var q=Object.getOwnPropertyNames;var N=Object.prototype.hasOwnProperty;var U=(i,t)=>{for(var s in t)M(i,s,{get:t[s],enumerable:!0})},W=(i,t,s,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of q(t))!N.call(i,a)&&a!==s&&M(i,a,{get:()=>t[a],enumerable:!(o=R(t,a))||o.enumerable});return i};var V=i=>W(M({},"__esModule",{value:!0}),i);var Y={};U(Y,{default:()=>I,getNotePath:()=>B,readNote:()=>O});module.exports=V(Y);function S(){return S=Object.assign?Object.assign.bind():function(i){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var o in s)({}).hasOwnProperty.call(s,o)&&(i[o]=s[o])}return i},S.apply(null,arguments)}function j(i){let t=new Uint8Array(i);return window.btoa(String.fromCharCode(...t))}function z(i){let t=window.atob(i),s=t.length,o=new Uint8Array(s);for(let a=0;a<s;a++)o[a]=t.charCodeAt(a);return o.buffer}var $=new Blob([`
      const BIAS = 0x84;
      const CLIP = 32635;
      const encodeTable = [
        0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,
        4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
        5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
        5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
        6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
        7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
      ];
      
      function encodeSample(sample) {
        let sign;
        let exponent;
        let mantissa;
        let muLawSample;
        sign = (sample >> 8) & 0x80;
        if (sign !== 0) sample = -sample;
        sample = sample + BIAS;
        if (sample > CLIP) sample = CLIP;
        exponent = encodeTable[(sample>>7) & 0xFF];
        mantissa = (sample >> (exponent+3)) & 0x0F;
        muLawSample = ~(sign | (exponent << 4) | mantissa);
        
        return muLawSample;
      }
    
      class RawAudioProcessor extends AudioWorkletProcessor {
        constructor() {
          super();
                    
          this.port.onmessage = ({ data }) => {
            this.buffer = []; // Initialize an empty buffer
            this.bufferSize = data.sampleRate / 4;
            
            if (globalThis.LibSampleRate && sampleRate !== data.sampleRate) {
              globalThis.LibSampleRate.create(1, sampleRate, data.sampleRate).then(resampler => {
                this.resampler = resampler;
              });
            } 
          };
        }
        process(inputs) {
          if (!this.buffer) {
            return true;
          }
          
          const input = inputs[0]; // Get the first input node
          if (input.length > 0) {
            let channelData = input[0]; // Get the first channel's data

            // Resample the audio if necessary
            if (this.resampler) {
              channelData = this.resampler.full(channelData);
            }

            // Add channel data to the buffer
            this.buffer.push(...channelData);
            // Get max volume 
            let sum = 0.0;
            for (let i = 0; i < channelData.length; i++) {
              sum += channelData[i] * channelData[i];
            }
            const maxVolume = Math.sqrt(sum / channelData.length);
            // Check if buffer size has reached or exceeded the threshold
            if (this.buffer.length >= this.bufferSize) {
              const float32Array = new Float32Array(this.buffer)
              let encodedArray = this.format === "ulaw"
                ? new Uint8Array(float32Array.length)
                : new Int16Array(float32Array.length);

              // Iterate through the Float32Array and convert each sample to PCM16
              for (let i = 0; i < float32Array.length; i++) {
                // Clamp the value to the range [-1, 1]
                let sample = Math.max(-1, Math.min(1, float32Array[i]));

                // Scale the sample to the range [-32768, 32767]
                let value = sample < 0 ? sample * 32768 : sample * 32767;
                if (this.format === "ulaw") {
                  value = encodeSample(Math.round(value));
                }

                encodedArray[i] = value;
              }

              // Send the buffered data to the main script
              this.port.postMessage([encodedArray, maxVolume]);

              // Clear the buffer after sending
              this.buffer = [];
            }
          }
          return true; // Continue processing
        }
      }
      registerProcessor("raw-audio-processor", RawAudioProcessor);
  `],{type:"application/javascript"}),G=URL.createObjectURL($);function L(){return["iPad Simulator","iPhone Simulator","iPod Simulator","iPad","iPhone","iPod"].includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document}var b=class{static async create({sampleRate:t,format:s,preferHeadphonesForIosDevices:o}){let a=null,n=null;try{let l={sampleRate:{ideal:t},echoCancellation:{ideal:!0},noiseSuppression:{ideal:!0}};if(L()&&o){let v=(await window.navigator.mediaDevices.enumerateDevices()).find(y=>y.kind==="audioinput"&&["airpod","headphone","earphone"].find(d=>y.label.toLowerCase().includes(d)));v&&(l.deviceId={ideal:v.deviceId})}let p=navigator.mediaDevices.getSupportedConstraints().sampleRate;a=new window.AudioContext(p?{sampleRate:t}:{});let g=a.createAnalyser();p||await a.audioWorklet.addModule("https://cdn.jsdelivr.net/npm/@alexanderolsen/libsamplerate-js@2.1.2/dist/libsamplerate.worklet.js"),await a.audioWorklet.addModule(G),n=await navigator.mediaDevices.getUserMedia({audio:l});let f=a.createMediaStreamSource(n),m=new AudioWorkletNode(a,"raw-audio-processor");return m.port.postMessage({type:"setFormat",format:s,sampleRate:t}),f.connect(g),g.connect(m),await a.resume(),new b(a,g,m,n)}catch(l){var e,r;throw(e=n)==null||e.getTracks().forEach(p=>p.stop()),(r=a)==null||r.close(),l}}constructor(t,s,o,a){this.context=void 0,this.analyser=void 0,this.worklet=void 0,this.inputStream=void 0,this.context=t,this.analyser=s,this.worklet=o,this.inputStream=a}async close(){this.inputStream.getTracks().forEach(t=>t.stop()),await this.context.close()}},J=new Blob([`
      const decodeTable = [0,132,396,924,1980,4092,8316,16764];
      
      export function decodeSample(muLawSample) {
        let sign;
        let exponent;
        let mantissa;
        let sample;
        muLawSample = ~muLawSample;
        sign = (muLawSample & 0x80);
        exponent = (muLawSample >> 4) & 0x07;
        mantissa = muLawSample & 0x0F;
        sample = decodeTable[exponent] + (mantissa << (exponent+3));
        if (sign !== 0) sample = -sample;

        return sample;
      }
      
      class AudioConcatProcessor extends AudioWorkletProcessor {
        constructor() {
          super();
          this.buffers = []; // Initialize an empty buffer
          this.cursor = 0;
          this.currentBuffer = null;
          this.wasInterrupted = false;
          this.finished = false;
          
          this.port.onmessage = ({ data }) => {
            switch (data.type) {
              case "setFormat":
                this.format = data.format;
                break;
              case "buffer":
                this.wasInterrupted = false;
                this.buffers.push(
                  this.format === "ulaw"
                    ? new Uint8Array(data.buffer)
                    : new Int16Array(data.buffer)
                );
                break;
              case "interrupt":
                this.wasInterrupted = true;
                break;
              case "clearInterrupted":
                if (this.wasInterrupted) {
                  this.wasInterrupted = false;
                  this.buffers = [];
                  this.currentBuffer = null;
                }
            }
          };
        }
        process(_, outputs) {
          let finished = false;
          const output = outputs[0][0];
          for (let i = 0; i < output.length; i++) {
            if (!this.currentBuffer) {
              if (this.buffers.length === 0) {
                finished = true;
                break;
              }
              this.currentBuffer = this.buffers.shift();
              this.cursor = 0;
            }

            let value = this.currentBuffer[this.cursor];
            if (this.format === "ulaw") {
              value = decodeSample(value);
            }
            output[i] = value / 32768;
            this.cursor++;

            if (this.cursor >= this.currentBuffer.length) {
              this.currentBuffer = null;
            }
          }

          if (this.finished !== finished) {
            this.finished = finished;
            this.port.postMessage({ type: "process", finished });
          }

          return true; // Continue processing
        }
      }

      registerProcessor("audio-concat-processor", AudioConcatProcessor);
    `],{type:"application/javascript"}),H=URL.createObjectURL(J),_=class{static async create({sampleRate:t,format:s}){let o=null;try{o=new AudioContext({sampleRate:t});let n=o.createAnalyser(),e=o.createGain();e.connect(n),n.connect(o.destination),await o.audioWorklet.addModule(H);let r=new AudioWorkletNode(o,"audio-concat-processor");return r.port.postMessage({type:"setFormat",format:s}),r.connect(e),await o.resume(),new _(o,n,e,r)}catch(n){var a;throw(a=o)==null||a.close(),n}}constructor(t,s,o,a){this.context=void 0,this.analyser=void 0,this.gain=void 0,this.worklet=void 0,this.context=t,this.analyser=s,this.gain=o,this.worklet=a}async close(){await this.context.close()}};function T(i){return!!i.type}var k=class{static async create(t){let s=null;try{var o;let n=(o=t.origin)!=null?o:"wss://api.elevenlabs.io",e=t.signedUrl?t.signedUrl:n+"/v1/convai/conversation?agent_id="+t.agentId,r=["convai"];t.authorization&&r.push(`bearer.${t.authorization}`),s=new WebSocket(e,r);let l=await new Promise((y,d)=>{s.addEventListener("open",()=>{var c;let u={type:"conversation_initiation_client_data"};var D,x,A,E;t.overrides&&(u.conversation_config_override={agent:{prompt:(D=t.overrides.agent)==null?void 0:D.prompt,first_message:(x=t.overrides.agent)==null?void 0:x.firstMessage,language:(A=t.overrides.agent)==null?void 0:A.language},tts:{voice_id:(E=t.overrides.tts)==null?void 0:E.voiceId}}),t.customLlmExtraBody&&(u.custom_llm_extra_body=t.customLlmExtraBody),t.dynamicVariables&&(u.dynamic_variables=t.dynamicVariables),(c=s)==null||c.send(JSON.stringify(u))},{once:!0}),s.addEventListener("error",c=>{setTimeout(()=>d(c),0)}),s.addEventListener("close",d),s.addEventListener("message",c=>{let u=JSON.parse(c.data);T(u)&&(u.type==="conversation_initiation_metadata"?y(u.conversation_initiation_metadata_event):console.warn("First received message is not conversation metadata."))},{once:!0})}),{conversation_id:p,agent_output_audio_format:g,user_input_audio_format:f}=l,m=P(f!=null?f:"pcm_16000"),v=P(g);return new k(s,p,m,v)}catch(n){var a;throw(a=s)==null||a.close(),n}}constructor(t,s,o,a){this.socket=void 0,this.conversationId=void 0,this.inputFormat=void 0,this.outputFormat=void 0,this.queue=[],this.disconnectionDetails=null,this.onDisconnectCallback=null,this.onMessageCallback=null,this.socket=t,this.conversationId=s,this.inputFormat=o,this.outputFormat=a,this.socket.addEventListener("error",n=>{setTimeout(()=>this.disconnect({reason:"error",message:"The connection was closed due to a socket error.",context:n}),0)}),this.socket.addEventListener("close",n=>{this.disconnect(n.code===1e3?{reason:"agent",context:n}:{reason:"error",message:n.reason||"The connection was closed by the server.",context:n})}),this.socket.addEventListener("message",n=>{try{let e=JSON.parse(n.data);if(!T(e))return;this.onMessageCallback?this.onMessageCallback(e):this.queue.push(e)}catch(e){}})}close(){this.socket.close()}sendMessage(t){this.socket.send(JSON.stringify(t))}onMessage(t){this.onMessageCallback=t,this.queue.forEach(t),this.queue=[]}onDisconnect(t){this.onDisconnectCallback=t,this.disconnectionDetails&&t(this.disconnectionDetails)}disconnect(t){var s;this.disconnectionDetails||(this.disconnectionDetails=t,(s=this.onDisconnectCallback)==null||s.call(this,t))}};function P(i){let[t,s]=i.split("_");if(!["pcm","ulaw"].includes(t))throw new Error(`Invalid format: ${i}`);let o=parseInt(s);if(isNaN(o))throw new Error(`Invalid sample rate: ${s}`);return{format:t,sampleRate:o}}var K={clientTools:{}},Q={onConnect:()=>{},onDebug:()=>{},onDisconnect:()=>{},onError:()=>{},onMessage:()=>{},onModeChange:()=>{},onStatusChange:()=>{},onCanSendFeedbackChange:()=>{}},w=class{static async startSession(t){let s=S({},K,Q,t);s.onStatusChange({status:"connecting"}),s.onCanSendFeedbackChange({canSendFeedback:!1});let o=null,a=null,n=null,e=null;try{var r,l;e=await navigator.mediaDevices.getUserMedia({audio:!0});let d=(r=t.connectionDelay)!=null?r:{default:0,android:3e3},c=d.default;var p;if(/android/i.test(navigator.userAgent))c=(p=d.android)!=null?p:c;else if(L()){var g;c=(g=d.ios)!=null?g:c}return c>0&&await new Promise(u=>setTimeout(u,c)),a=await k.create(t),[o,n]=await Promise.all([b.create(S({},a.inputFormat,{preferHeadphonesForIosDevices:t.preferHeadphonesForIosDevices})),_.create(a.outputFormat)]),(l=e)==null||l.getTracks().forEach(u=>u.stop()),e=null,new w(s,a,o,n)}catch(d){var f,m,v,y;throw s.onStatusChange({status:"disconnected"}),(f=e)==null||f.getTracks().forEach(c=>c.stop()),(m=a)==null||m.close(),await((v=o)==null?void 0:v.close()),await((y=n)==null?void 0:y.close()),d}}constructor(t,s,o,a){var n=this;this.options=void 0,this.connection=void 0,this.input=void 0,this.output=void 0,this.lastInterruptTimestamp=0,this.mode="listening",this.status="connecting",this.inputFrequencyData=void 0,this.outputFrequencyData=void 0,this.volume=1,this.currentEventId=1,this.lastFeedbackEventId=1,this.canSendFeedback=!1,this.endSession=()=>this.endSessionWithDetails({reason:"user"}),this.endSessionWithDetails=async function(e){n.status!=="connected"&&n.status!=="connecting"||(n.updateStatus("disconnecting"),n.connection.close(),await n.input.close(),await n.output.close(),n.updateStatus("disconnected"),n.options.onDisconnect(e))},this.updateMode=e=>{e!==this.mode&&(this.mode=e,this.options.onModeChange({mode:e}))},this.updateStatus=e=>{e!==this.status&&(this.status=e,this.options.onStatusChange({status:e}))},this.updateCanSendFeedback=()=>{let e=this.currentEventId!==this.lastFeedbackEventId;this.canSendFeedback!==e&&(this.canSendFeedback=e,this.options.onCanSendFeedbackChange({canSendFeedback:e}))},this.onMessage=async function(e){switch(e.type){case"interruption":e.interruption_event&&(n.lastInterruptTimestamp=e.interruption_event.event_id),n.fadeOutAudio();break;case"agent_response":n.options.onMessage({source:"ai",message:e.agent_response_event.agent_response});break;case"user_transcript":n.options.onMessage({source:"user",message:e.user_transcription_event.user_transcript});break;case"internal_tentative_agent_response":n.options.onDebug({type:"tentative_agent_response",response:e.tentative_agent_response_internal_event.tentative_agent_response});break;case"client_tool_call":if(n.options.clientTools.hasOwnProperty(e.client_tool_call.tool_name)){try{var r;let l=(r=await n.options.clientTools[e.client_tool_call.tool_name](e.client_tool_call.parameters))!=null?r:"Client tool execution successful.";n.connection.sendMessage({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:l,is_error:!1})}catch(l){n.onError("Client tool execution failed with following error: "+(l==null?void 0:l.message),{clientToolName:e.client_tool_call.tool_name}),n.connection.sendMessage({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:"Client tool execution failed: "+(l==null?void 0:l.message),is_error:!0})}break}if(n.options.onUnhandledClientToolCall){n.options.onUnhandledClientToolCall(e.client_tool_call);break}n.onError(`Client tool with name ${e.client_tool_call.tool_name} is not defined on client`,{clientToolName:e.client_tool_call.tool_name}),n.connection.sendMessage({type:"client_tool_result",tool_call_id:e.client_tool_call.tool_call_id,result:`Client tool with name ${e.client_tool_call.tool_name} is not defined on client`,is_error:!0});break;case"audio":n.lastInterruptTimestamp<=e.audio_event.event_id&&(n.addAudioBase64Chunk(e.audio_event.audio_base_64),n.currentEventId=e.audio_event.event_id,n.updateCanSendFeedback(),n.updateMode("speaking"));break;case"ping":n.connection.sendMessage({type:"pong",event_id:e.ping_event.event_id});break;default:n.options.onDebug(e)}},this.onInputWorkletMessage=e=>{this.status==="connected"&&this.connection.sendMessage({user_audio_chunk:j(e.data[0].buffer)})},this.onOutputWorkletMessage=({data:e})=>{e.type==="process"&&this.updateMode(e.finished?"listening":"speaking")},this.addAudioBase64Chunk=e=>{this.output.gain.gain.value=this.volume,this.output.worklet.port.postMessage({type:"clearInterrupted"}),this.output.worklet.port.postMessage({type:"buffer",buffer:z(e)})},this.fadeOutAudio=()=>{this.updateMode("listening"),this.output.worklet.port.postMessage({type:"interrupt"}),this.output.gain.gain.exponentialRampToValueAtTime(1e-4,this.output.context.currentTime+2),setTimeout(()=>{this.output.gain.gain.value=this.volume,this.output.worklet.port.postMessage({type:"clearInterrupted"})},2e3)},this.onError=(e,r)=>{console.error(e,r),this.options.onError(e,r)},this.calculateVolume=e=>{if(e.length===0)return 0;let r=0;for(let l=0;l<e.length;l++)r+=e[l]/255;return r/=e.length,r<0?0:r>1?1:r},this.getId=()=>this.connection.conversationId,this.isOpen=()=>this.status==="connected",this.setVolume=({volume:e})=>{this.volume=e},this.getInputByteFrequencyData=()=>(this.inputFrequencyData!=null||(this.inputFrequencyData=new Uint8Array(this.input.analyser.frequencyBinCount)),this.input.analyser.getByteFrequencyData(this.inputFrequencyData),this.inputFrequencyData),this.getOutputByteFrequencyData=()=>(this.outputFrequencyData!=null||(this.outputFrequencyData=new Uint8Array(this.output.analyser.frequencyBinCount)),this.output.analyser.getByteFrequencyData(this.outputFrequencyData),this.outputFrequencyData),this.getInputVolume=()=>this.calculateVolume(this.getInputByteFrequencyData()),this.getOutputVolume=()=>this.calculateVolume(this.getOutputByteFrequencyData()),this.sendFeedback=e=>{this.canSendFeedback?(this.connection.sendMessage({type:"feedback",score:e?"like":"dislike",event_id:this.currentEventId}),this.lastFeedbackEventId=this.currentEventId,this.updateCanSendFeedback()):console.warn(this.lastFeedbackEventId===0?"Cannot send feedback: the conversation has not started yet.":"Cannot send feedback: feedback has already been sent for the current response.")},this.options=t,this.connection=s,this.input=o,this.output=a,this.options.onConnect({conversationId:s.conversationId}),this.connection.onDisconnect(this.endSessionWithDetails),this.connection.onMessage(this.onMessage),this.input.worklet.port.onmessage=this.onInputWorkletMessage,this.output.worklet.port.onmessage=this.onOutputWorkletMessage,this.updateStatus("connected")}};var h=require("obsidian");function B(i,t){let s=t.replace(/[/\\?%*:|"<>]/g,"-").trim()+".md",a=i.vault.getFiles().find(n=>n.name===s);return a?a.path:null}async function O(i,t){let s=B(i,t);if(!s)return null;let o=i.vault.getAbstractFileByPath(s);return o instanceof h.TFile?await i.vault.read(o):null}var X={agentId:""},I=class extends h.Plugin{async onload(){await this.loadSettings(),this.addRibbonIcon("dice","Sample Plugin",a=>{new C(this.app,this.settings).open()}).addClass("my-plugin-ribbon-class"),this.addStatusBarItem().setText("Status Bar Text"),this.addCommand({id:"open-voice-ai-agent",name:"Open ElevenLabs Conversational AI",callback:()=>{new C(this.app,this.settings).open()}}),this.addSettingTab(new F(this.app,this)),this.registerDomEvent(document,"click",a=>{console.log("click",a)}),this.registerInterval(window.setInterval(()=>console.log("setInterval"),5*60*1e3))}onunload(){}async loadSettings(){this.settings=Object.assign({},X,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},C=class extends h.Modal{constructor(s,o){super(s);this.settings=o,this.conversation=null}async onOpen(){let{contentEl:s,conversation:o}=this;s.setText("Woah!"),this.conversation=await w.startSession({agentId:this.settings.agentId,clientTools:{saveNote:async({message:a})=>{console.log(a),await this.app.vault.create("New Note.md",a)},getNote:async({noteName:a})=>{console.log(a);let n=await O(this.app,a);return n?(console.log(n),n):""}}})}async onClose(){let{contentEl:s}=this;this.conversation&&await this.conversation.endSession(),s.empty()}},F=class extends h.PluginSettingTab{constructor(s,o){super(s,o);this.plugin=o}display(){let{containerEl:s}=this;s.empty(),new h.Setting(s).setName("ElevenLabs Agent Id").setDesc("ElevenLabs Agent Id").addText(o=>o.setPlaceholder("Enter your Agent Id").setValue(this.plugin.settings.agentId).onChange(async a=>{this.plugin.settings.agentId=a,await this.plugin.saveSettings()}))}};
